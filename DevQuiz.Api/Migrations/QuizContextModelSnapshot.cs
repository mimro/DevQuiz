// <auto-generated />
using System;
using DevQuiz.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevQuiz.Api.Migrations
{
    [DbContext(typeof(QuizContext))]
    partial class QuizContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DevQuiz.Api.Entities.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea123"),
                            AnswerText = "TestAnswer",
                            IsCorrectAnswer = true,
                            QuestionId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea315")
                        });
                });

            modelBuilder.Entity("DevQuiz.Api.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("QuizId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea315"),
                            QuestionText = "TestQuestion",
                            QuizId = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea314")
                        });
                });

            modelBuilder.Entity("DevQuiz.Api.Entities.Quiz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizLevel")
                        .HasColumnType("int");

                    b.Property<int>("QuizTopic")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfb88e29-4744-48c0-94fa-b25b92dea314"),
                            Name = "Test 1",
                            QuizLevel = 0,
                            QuizTopic = 1
                        });
                });

            modelBuilder.Entity("DevQuiz.Api.Entities.Answer", b =>
                {
                    b.HasOne("DevQuiz.Api.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("DevQuiz.Api.Entities.Question", b =>
                {
                    b.HasOne("DevQuiz.Api.Entities.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("DevQuiz.Api.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("DevQuiz.Api.Entities.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
